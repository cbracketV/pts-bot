# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import common_pb2 as proto_dot_common__pb2
from . import l2cap_pb2 as proto_dot_l2cap__pb2


class L2capClassicModuleFacadeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FetchConnectionComplete = channel.unary_stream(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/FetchConnectionComplete',
                request_serializer=proto_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_l2cap__pb2.ConnectionCompleteEvent.FromString,
                )
        self.FetchConnectionClose = channel.unary_stream(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/FetchConnectionClose',
                request_serializer=proto_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_l2cap__pb2.ConnectionCloseEvent.FromString,
                )
        self.OpenChannel = channel.unary_unary(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/OpenChannel',
                request_serializer=proto_dot_l2cap__pb2.OpenChannelRequest.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Empty.FromString,
                )
        self.CloseChannel = channel.unary_unary(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/CloseChannel',
                request_serializer=proto_dot_l2cap__pb2.CloseChannelRequest.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Empty.FromString,
                )
        self.FetchL2capData = channel.unary_stream(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/FetchL2capData',
                request_serializer=proto_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_l2cap__pb2.L2capPacket.FromString,
                )
        self.SetDynamicChannel = channel.unary_unary(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SetDynamicChannel',
                request_serializer=proto_dot_l2cap__pb2.SetEnableDynamicChannelRequest.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Empty.FromString,
                )
        self.SendDynamicChannelPacket = channel.unary_unary(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SendDynamicChannelPacket',
                request_serializer=proto_dot_l2cap__pb2.DynamicChannelPacket.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Empty.FromString,
                )
        self.SetTrafficPaused = channel.unary_unary(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SetTrafficPaused',
                request_serializer=proto_dot_l2cap__pb2.SetTrafficPausedRequest.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Empty.FromString,
                )
        self.GetChannelQueueDepth = channel.unary_unary(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/GetChannelQueueDepth',
                request_serializer=proto_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_l2cap__pb2.GetChannelQueueDepthResponse.FromString,
                )
        self.InitiateConnectionForSecurity = channel.unary_unary(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/InitiateConnectionForSecurity',
                request_serializer=proto_dot_common__pb2.BluetoothAddress.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Empty.FromString,
                )
        self.FetchSecurityConnectionEvents = channel.unary_stream(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/FetchSecurityConnectionEvents',
                request_serializer=proto_dot_common__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_l2cap__pb2.LinkSecurityInterfaceCallbackEvent.FromString,
                )
        self.SecurityLinkEnsureAuthenticated = channel.unary_unary(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SecurityLinkEnsureAuthenticated',
                request_serializer=proto_dot_common__pb2.BluetoothAddress.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Empty.FromString,
                )
        self.SecurityLinkHold = channel.unary_unary(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SecurityLinkHold',
                request_serializer=proto_dot_common__pb2.BluetoothAddress.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Empty.FromString,
                )
        self.SecurityLinkDisconnect = channel.unary_unary(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SecurityLinkDisconnect',
                request_serializer=proto_dot_common__pb2.BluetoothAddress.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Empty.FromString,
                )
        self.SecurityLinkRelease = channel.unary_unary(
                '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SecurityLinkRelease',
                request_serializer=proto_dot_common__pb2.BluetoothAddress.SerializeToString,
                response_deserializer=proto_dot_common__pb2.Empty.FromString,
                )


class L2capClassicModuleFacadeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FetchConnectionComplete(self, request, context):
        """Testing Android Bluetooth stack only. Optional for other stack.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchConnectionClose(self, request, context):
        """Testing Android Bluetooth stack only. Optional for other stack.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchL2capData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDynamicChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendDynamicChannelPacket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTrafficPaused(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChannelQueueDepth(self, request, context):
        """Get the buffer size of channel queue end for L2CAP user (how many packets we can buffer
        before L2CAP user dequeues.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitiateConnectionForSecurity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchSecurityConnectionEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SecurityLinkEnsureAuthenticated(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SecurityLinkHold(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SecurityLinkDisconnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SecurityLinkRelease(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_L2capClassicModuleFacadeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FetchConnectionComplete': grpc.unary_stream_rpc_method_handler(
                    servicer.FetchConnectionComplete,
                    request_deserializer=proto_dot_common__pb2.Empty.FromString,
                    response_serializer=proto_dot_l2cap__pb2.ConnectionCompleteEvent.SerializeToString,
            ),
            'FetchConnectionClose': grpc.unary_stream_rpc_method_handler(
                    servicer.FetchConnectionClose,
                    request_deserializer=proto_dot_common__pb2.Empty.FromString,
                    response_serializer=proto_dot_l2cap__pb2.ConnectionCloseEvent.SerializeToString,
            ),
            'OpenChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenChannel,
                    request_deserializer=proto_dot_l2cap__pb2.OpenChannelRequest.FromString,
                    response_serializer=proto_dot_common__pb2.Empty.SerializeToString,
            ),
            'CloseChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseChannel,
                    request_deserializer=proto_dot_l2cap__pb2.CloseChannelRequest.FromString,
                    response_serializer=proto_dot_common__pb2.Empty.SerializeToString,
            ),
            'FetchL2capData': grpc.unary_stream_rpc_method_handler(
                    servicer.FetchL2capData,
                    request_deserializer=proto_dot_common__pb2.Empty.FromString,
                    response_serializer=proto_dot_l2cap__pb2.L2capPacket.SerializeToString,
            ),
            'SetDynamicChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDynamicChannel,
                    request_deserializer=proto_dot_l2cap__pb2.SetEnableDynamicChannelRequest.FromString,
                    response_serializer=proto_dot_common__pb2.Empty.SerializeToString,
            ),
            'SendDynamicChannelPacket': grpc.unary_unary_rpc_method_handler(
                    servicer.SendDynamicChannelPacket,
                    request_deserializer=proto_dot_l2cap__pb2.DynamicChannelPacket.FromString,
                    response_serializer=proto_dot_common__pb2.Empty.SerializeToString,
            ),
            'SetTrafficPaused': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTrafficPaused,
                    request_deserializer=proto_dot_l2cap__pb2.SetTrafficPausedRequest.FromString,
                    response_serializer=proto_dot_common__pb2.Empty.SerializeToString,
            ),
            'GetChannelQueueDepth': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannelQueueDepth,
                    request_deserializer=proto_dot_common__pb2.Empty.FromString,
                    response_serializer=proto_dot_l2cap__pb2.GetChannelQueueDepthResponse.SerializeToString,
            ),
            'InitiateConnectionForSecurity': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateConnectionForSecurity,
                    request_deserializer=proto_dot_common__pb2.BluetoothAddress.FromString,
                    response_serializer=proto_dot_common__pb2.Empty.SerializeToString,
            ),
            'FetchSecurityConnectionEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.FetchSecurityConnectionEvents,
                    request_deserializer=proto_dot_common__pb2.Empty.FromString,
                    response_serializer=proto_dot_l2cap__pb2.LinkSecurityInterfaceCallbackEvent.SerializeToString,
            ),
            'SecurityLinkEnsureAuthenticated': grpc.unary_unary_rpc_method_handler(
                    servicer.SecurityLinkEnsureAuthenticated,
                    request_deserializer=proto_dot_common__pb2.BluetoothAddress.FromString,
                    response_serializer=proto_dot_common__pb2.Empty.SerializeToString,
            ),
            'SecurityLinkHold': grpc.unary_unary_rpc_method_handler(
                    servicer.SecurityLinkHold,
                    request_deserializer=proto_dot_common__pb2.BluetoothAddress.FromString,
                    response_serializer=proto_dot_common__pb2.Empty.SerializeToString,
            ),
            'SecurityLinkDisconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.SecurityLinkDisconnect,
                    request_deserializer=proto_dot_common__pb2.BluetoothAddress.FromString,
                    response_serializer=proto_dot_common__pb2.Empty.SerializeToString,
            ),
            'SecurityLinkRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.SecurityLinkRelease,
                    request_deserializer=proto_dot_common__pb2.BluetoothAddress.FromString,
                    response_serializer=proto_dot_common__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bluetooth.l2cap.classic.L2capClassicModuleFacade', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class L2capClassicModuleFacade(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FetchConnectionComplete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/FetchConnectionComplete',
            proto_dot_common__pb2.Empty.SerializeToString,
            proto_dot_l2cap__pb2.ConnectionCompleteEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchConnectionClose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/FetchConnectionClose',
            proto_dot_common__pb2.Empty.SerializeToString,
            proto_dot_l2cap__pb2.ConnectionCloseEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/OpenChannel',
            proto_dot_l2cap__pb2.OpenChannelRequest.SerializeToString,
            proto_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/CloseChannel',
            proto_dot_l2cap__pb2.CloseChannelRequest.SerializeToString,
            proto_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchL2capData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/FetchL2capData',
            proto_dot_common__pb2.Empty.SerializeToString,
            proto_dot_l2cap__pb2.L2capPacket.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDynamicChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SetDynamicChannel',
            proto_dot_l2cap__pb2.SetEnableDynamicChannelRequest.SerializeToString,
            proto_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendDynamicChannelPacket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SendDynamicChannelPacket',
            proto_dot_l2cap__pb2.DynamicChannelPacket.SerializeToString,
            proto_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTrafficPaused(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SetTrafficPaused',
            proto_dot_l2cap__pb2.SetTrafficPausedRequest.SerializeToString,
            proto_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChannelQueueDepth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/GetChannelQueueDepth',
            proto_dot_common__pb2.Empty.SerializeToString,
            proto_dot_l2cap__pb2.GetChannelQueueDepthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitiateConnectionForSecurity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/InitiateConnectionForSecurity',
            proto_dot_common__pb2.BluetoothAddress.SerializeToString,
            proto_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchSecurityConnectionEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/FetchSecurityConnectionEvents',
            proto_dot_common__pb2.Empty.SerializeToString,
            proto_dot_l2cap__pb2.LinkSecurityInterfaceCallbackEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SecurityLinkEnsureAuthenticated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SecurityLinkEnsureAuthenticated',
            proto_dot_common__pb2.BluetoothAddress.SerializeToString,
            proto_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SecurityLinkHold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SecurityLinkHold',
            proto_dot_common__pb2.BluetoothAddress.SerializeToString,
            proto_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SecurityLinkDisconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SecurityLinkDisconnect',
            proto_dot_common__pb2.BluetoothAddress.SerializeToString,
            proto_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SecurityLinkRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bluetooth.l2cap.classic.L2capClassicModuleFacade/SecurityLinkRelease',
            proto_dot_common__pb2.BluetoothAddress.SerializeToString,
            proto_dot_common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
